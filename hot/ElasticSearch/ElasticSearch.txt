Due to some heat limitations, the ElasticSearch templates are currently broken up into a few pieces. Heat limitations are
expected to be resolved in Icehouse.

To start a new ElasticSearch cluster, spawn stack:
ElasticSearch_BaseCluster.template

This sets up all of your static cluster bits. Security groups, network, master servers, etc.

Note, due to a limitation/bug in neutron lbaas, after launching the load balancer, the load balancer may be assigned the
wrong security group on its vip. The following procedure can be used to fix it until the bug is resolved (replace content
listend in <...> with the value requested inside:
 * run "heat stack-show <your base cluster stackname>". Find the output_value associated with "LoadBalancerId". Also find
       the output_value associated with "BackendSecurityGroup"
 * run "eval $(neutron lb-pool-show <output value LoadBalancerId here> -f shell | grep vip_id)"
 * run "eval $(neutron lb-vip-show $vip_id -f shell | grep port_id)"
 * run "neutron port-update $port_id --security-group <output value BackendSecurityGroup here>"

Once this stack is started, either download the following two files from one of the master servers or assign a
floating-ip to one of them so that you can use the url directly from the OpenStack Dashboard or CLI:
 * http://<floating ip>/ElasticSearch_ScalableDataNode.yaml
 * http://<floating ip>/ElasticSearch_ScalableRouter.yaml

It is done this way so that you don't have to go lookup a dozen values from
the BaseCluster stack's output and enter them every time you want to start up
a new DataNode or Router.

You need to start at least one DataNode and one Router in order to have a
working cluster.

Lastly, for each Router you start, you currently need to manually add it to
the LoadBalancer due to a Neutron limitation in Heat. It can not be done via
Dashboard either due to different, but similar limitation.

It may be done via the command line as follows:
neutron lb-member-create --address <RouterStack.Output.MemberName> --protocol-port 9200 <BaseStack.Output.LoadBalancerId>
