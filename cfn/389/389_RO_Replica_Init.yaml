HeatTemplateFormatVersion: '2012-12-12'
Description: 389 LDAP server Replica Create Volumes
Parameters:
  VolumeName: {Description: Name for the volume, Type: String}
  ShortHostName: {Description: Name for the host, Type: String}
  Domain: {Description: The domain the server will be in, Type: String}
  PrimaryNetworkId: {Description: PrimaryNetworkId, Type: String}
  KeyName: {Description: Name of an existing EC2 KeyPair
      to enable SSH access, Type: String}
  PreSetupUserData:
    Default: ''
    Description: Pre Setup Userdata Script UserData script
    Type: String
  ExtraUserData: {Default: '', Description: Extra
      UserData script, Type: String}
  InstanceZone: {Default: 'nova', Description: AvailabilityZone for
      this instance, Type: String}
  Flavor:
    Default: m1.tiny
    Description: Flavor to boot
    Type: String
  Image:
    Default: centos-6.5
    Description: Image of choice
    Type: String
  StartupTimeout: {Default: '1700', Description: How
      long to wait on node coming up, Type: Number}
  VolumeSize: {Default: '4', Description: Volume
      size for each EBS volume, Type: Number}
  AdminUsername:
      Default: 'admin'
      Description: Admin Username
      Type: String
  AdminPassword:
      Description: Admin Password
      Type: String
      NoEcho: True
  RootDN:
      Default: 'cn=Directory Manager'
      Description: Root DN Username
      Type: String
  RootDNPassword:
      Description: Root DN Password
      Type: String
      NoEcho: True
  HashedRootDNPassword:
      Description: Hashed Root DN Password
      Type: String
      NoEcho: True
  ConfigDirectoryLdapURL:
      Description: Config Directoy LDAP URL
      Type: String
  Suffix:
      Description: The suffix for the ldap server
      Type: String
  Server:
      Description: The full dns name of the server to replicate from.
      Type: String
  SecurityGroups:
      Default: "[\"default\", \"389\"]"
      Description: Security groups to assign the instance.
      Type: String
  FloatingIpAddress:
    Description: The floating ip address for the instance
    Type: String
Resources:
  ReplicationPw:
    Type: OS::Heat::RandomString
    Properties:
      length: 8
  Instance:
    Properties:
      Parameters:
        Name: {Ref: VolumeName}
        DefaultSecurityGroups: "False"
        SecurityGroups: {Ref: SecurityGroups}
        PrimaryNetworkId: {Ref: PrimaryNetworkId}
        KeyName: {Ref: KeyName}
        InstanceZone: {Ref: InstanceZone}
        Flavor: {Ref: Flavor}
        Image: {Ref: Image}
        StartupTimeout: {Ref: StartupTimeout}
        VolumeSize: {Ref: VolumeSize}
        VolumeContainer: lvm
        VolumeFormat: ext4
        AssignFloatingIp: "True"
        FloatingIpAddress: {Ref: FloatingIpAddress}
        ExtraUserData:
          Fn::Base64:
            Fn::Join: #FIXME this shouldn't be an init. should probably just be a transient instance.
            - ''
            - - "if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then\n"
              - "    /etc/init.d/sshd start\n"
              - "fi\n"
              - "yum install -y 389-ds 389-admin xorg-x11-xauth liberation-sans-fonts\n"
              - "mkdir -p /srv/etc\n"
              - "mkdir -p /srv/389/etc\n"
              - "mkdir -p /srv/389/usr-lib\n"
              - "mkdir -p /srv/389/lib\n"
              - "umount /home || true\n"
              - "cp -a /etc/ssh /srv/etc\n"
              - "SHORTHN=\""
              - {Ref: ShortHostName}
              - "\"\n"
              - "ROOTDN=\""
              - {Ref: RootDN}
              - "\"\n"
              - "ROOTDNPW=\""
              - {Ref: RootDNPassword}
              - "\"\n"
              - "SUFFIX=\""
              - {Ref: Suffix}
              - "\"\n"
              - "DOMAIN=\""
              - {Ref: Domain}
              - "\"\n"
              - "SERVER=\""
              - {Ref: Server}
              - "\"\n"
              - "cat > /srv/389/389.inf << EOF\n"
              - "[General]\n"
              - "AdminDomain = $DOMAIN\n"
              - "ConfigDirectoryAdminID = "
              - {Ref: AdminUsername}
              - "\n"
              - "ConfigDirectoryAdminPwd = "
              - {Ref: AdminPassword}
              - "\n"
              - "ConfigDirectoryLdapURL = "
              - {Ref: ConfigDirectoryLdapURL}
              - "\n"
              - "FullMachineName = $SHORTHN.$DOMAIN\n"
              - "ServerRoot = /usr/lib64/dirsrv\n"
              - "SuiteSpotGroup = nobody\n"
              - "SuiteSpotUserID = nobody\n"
              - "[admin]\n"
              - "Port = 9830\n"
              - "ServerAdminID = "
              - {Ref: AdminUsername}
              - "\n"
              - "ServerAdminPwd = "
              - {Ref: AdminPassword}
              - "\n"
              - "ServerIpAddress = 0.0.0.0\n"
              - "SysUser = nobody\n"
              - "[slapd]\n"
              - "AddOrgEntries = Yes\n"
              - "AddSampleEntries = No\n"
              - "HashedRootDNPwd = "
              - {Ref: HashedRootDNPassword}
              - "\n"
              - "InstallLdifFile = suggest\n"
              - "RootDN = $ROOTDN\n"
              - "RootDNPwd = $ROOTDNPW\n"
              - "ServerIdentifier = $SHORTHN\n"
              - "ServerPort = 389\n"
              - "Suffix = $SUFFIX\n"
              - "UseExistingMC = 1\n"
              - "bak_dir = /var/lib/dirsrv/slapd-$SHORTHN/bak\n"
              - "bindir = /usr/bin\n"
              - "cert_dir = /etc/dirsrv/slapd-$SHORTHN\n"
              - "config_dir = /etc/dirsrv/slapd-$SHORTHN\n"
              - "datadir = /usr/share\n"
              - "db_dir = /var/lib/dirsrv/slapd-$SHORTHN/db\n"
              - "ds_bename = userRoot\n"
              - "inst_dir = /usr/lib64/dirsrv/slapd-$SHORTHN\n"
              - "ldif_dir = /var/lib/dirsrv/slapd-$SHORTHN/ldif\n"
              - "localstatedir = /var\n"
              - "lock_dir = /var/lock/dirsrv/slapd-$SHORTHN\n"
              - "log_dir = /var/log/dirsrv/slapd-$SHORTHN\n"
              - "naming_value = $SHORTHN\n"
              - "run_dir = /var/run/dirsrv\n"
              - "sbindir = /usr/sbin\n"
              - "schema_dir = /etc/dirsrv/slapd-$SHORTHN/schema\n"
              - "sysconfdir = /srv/etc\n"
              - "tmp_dir = /tmp\n"
              - "EOF\n"
              - "cat > /srv/389/user-setup.sh << EOD\n"
              - "#!/bin/bash\n"
              - "ldapmodify -v -h $SHORTHN.$DOMAIN -a -D \"$ROOTDN\" -w \"$ROOTDNPW\" <<EOF\n"
              - "dn: cn=replication manager,cn=config\n"
              - "objectClass: inetorgperson\n"
              - "objectClass: person\n"
              - "objectClass: top\n"
              - "cn: replication manager\n"
              - "sn: RM\n"
              - "userPassword: "
              - {Ref: ReplicationPw}
              - "\n"
              - "EOF\n"
              - "exit $?\n"
              - "EOD\n"
              - "cat > /srv/389/slave-setup.sh << EOD\n"
              - "#!/bin/bash\n"
              - "ldapmodify -v -h $SHORTHN.$DOMAIN -p 389 -D \"$ROOTDN\" -w \"$ROOTDNPW\" <<EOF\n"
              - "dn: cn=replica,cn=\"$SUFFIX\",cn=mapping tree,cn=config\n"
              - "changetype: add\n"
              - "objectclass: top\n"
              - "objectclass: nsds5replica\n"
              - "objectclass: extensibleObject\n"
              - "cn: replica\n"
              - "nsds5replicaroot: $SUFFIX\n"
              - "nsds5replicatype: 2\n"
              - "nsds5ReplicaBindDN: cn=replication manager,cn=config\n"
              - "nsDS5ReplicaId: 0\n"
              - "nsds5flags: 0\n"
              - "EOF\n"
              - "exit $?\n"
              - "EOD\n"
              - "cat > /srv/389/master-setup.sh << EOD\n"
              - "#!/bin/bash\n"
              - "function bnd {\n"
              - "	ldapmodify -h $SERVER -D \"$ROOTDN\" -w \"$ROOTDNPW\" -x << EOF\n"
              - "dn: cn=$SHORTHN replication,cn=replica,cn=\"$SUFFIX\",cn=mapping tree,cn=config\n"
              - "changetype: add\n"
              - "objectclass: top\n"
              - "objectclass: nsds5replicationagreement\n"
              - "cn: $SHORTHN replication\n"
              - "nsds5replicahost: $SHORTHN.$DOMAIN\n"
              - "nsds5replicaport: 389\n"
              - "nsds5ReplicaBindDN: cn=replication manager,cn=config\n"
              - "nsds5replicabindmethod: SIMPLE\n"
              - "nsds5replicaroot: $SUFFIX\n"
              - "description: agreement between master and $SHORTHN\n"
              - "nsds5replicacredentials: "
              - {Ref: ReplicationPw}
              - "\n"
              - "nsds5BeginReplicaRefresh: start\n"
              - "EOF\n"
              - "}\n"
              - "bnd\n"
              - "if [ \\$? -eq 68 ]; then\n"
              - "	ldapdelete -h $SERVER -D \"$ROOTDN\" -w \"$ROOTDNPW\" \"cn=$SHORTHN replication,cn=replica,cn=\\\"$SUFFIX\\\",cn=mapping tree,cn=config\"\n"
              - "	bnd\n"
              - "fi\n"
              - "exit $?\n"
              - "EOD\n"
              - "cat > /srv/389/sync-wait.sh << EOD\n"
              - "#!/bin/bash\n"
              - "status=TRUE\n"
              - "while [ \"x\\$status\" == \"TRUE\" ]\n"
              - "do\n"
              - "    sleep 1;\n"
              - "    status=\\`ldapsearch -h $SERVER -x -b \"cn=$SHORTHN replication,cn=replica,cn=\\\"$SUFFIX\\\",cn=mapping tree,cn=config\" -D \"$ROOTDN\" -w \"$ROOTDNPW\" objectClass=nsDS5ReplicationAgreement nsds5replicaUpdateInProgress -LL | grep 'nsds5replicaUpdateInProgress' | awk -F: '{print \\$2}' | sed 's/ //'\\`\n"
              - "done\n"
              - "status=\\`ldapsearch -h $SERVER -x -b \"cn=$SHORTHN replication,cn=replica,cn=\\\"$SUFFIX\\\",cn=mapping tree,cn=config\" -D \"$ROOTDN\" -w \"$ROOTDNPW\" objectClass=nsDS5ReplicationAgreement nsds5replicaLastUpdateStatus -LL | grep 'nsds5replicaLastUpdateStatus'\\`\n"
              - "failure=0\n"
              - "echo \\$status | grep -v '^[^:]\\+:[ ]*0' > /dev/null && failure=1\n"
              - "if [ \\$failure -eq 1 ]\n"
              - "then\n"
              - "    echo \\$status | sed 's/^[^:]\\+:[ ]*/SYNC ERROR: /'\n"
              - "    exit -1\n"
              - "fi\n"
              - "EOD\n"
              - "chmod +x /srv/389/master-setup.sh /srv/389/slave-setup.sh /srv/389/user-setup.sh /srv/389/sync-wait.sh\n"
              - "## Pre setup userdata.\n"
              - {Ref: PreSetupUserData}
              - "\n"
              - "mkdir -p /srv/389/usr-lib/slapd-$SHORTHN\n"
              - "mkdir -p /usr/lib64/dirsrv/slapd-$SHORTHN\n"
              - "mount --bind /srv/389/usr-lib/slapd-$SHORTHN /usr/lib64/dirsrv/slapd-$SHORTHN\n"
              - "mount --bind /srv/389/lib /var/lib/dirsrv\n"
              - "setup-ds-admin.pl --file /srv/389/389.inf --silent\n"
              - "/srv/389/user-setup.sh\n"
              - "/srv/389/slave-setup.sh\n"
              - "/srv/389/master-setup.sh\n"
              - "fail_msg=\\`/srv/389/sync-wait.sh\\` || error_exit \"\\$fail_msg\"\n"
              - "service dirsrv stop\n"
              - "service dirsrv-admin stop\n"
              - "cp -a /etc/dirsrv/* /srv/389/etc/\n"
              - "## Extra userdata\n"
              - {Ref: ExtraUserData}
              - "\n"
              - "umount /var/lib/dirsrv\n"
              - "umount /usr/lib64/dirsrv/slapd-$SHORTHN\n"
      TemplateURL: 'https://raw.github.com/EMSL-MSC/heat-templates/master/cfn/lib/Volume-Init.yaml'
    Type: AWS::CloudFormation::Stack

