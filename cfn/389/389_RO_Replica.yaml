HeatTemplateFormatVersion: '2012-12-12'
Description: 389 LDAP server replica
Outputs:
  Name:
    Description: public DNS name of the 389 Server
      Instance
    Value:
      Fn::GetAtt: [Instance, Name]
  Id:
    Description: Instance Id
    Value:
      Fn::GetAtt: [Instance, Id]
Parameters:
  Name: {Description: ServerName, Type: String}
  IpAddress: {Description: Floating Ip Address to assign, Type: String}
  VolumeId: {Description: Volume where data lives, Type: String}
  PrimarySecurityGroup: {Description: Primary Security Group Id, Type: String}
  ExtraUserData: {Default: '', Description: Extra UserData script, Type: String}
  InstanceType:
    Default: m1.small
    Description: EC2 instance type (e.g. m1.large, m1.xlarge, m2.xlarge)
    Type: String
  InstanceZone:
    Default: nova
    Description: AvailabilityZone for this instance
    Type: String
  KeyName: {Description: Name of an existing EC2 KeyPair to enable SSH access, Type: String}
  Image: {Description: Image to use, Type: String}
  PrimaryNetworkId: {Description: PrimaryNetworkId, Type: String}
  StartupTimeout: {Default: '700', Description: How long to wait on node coming up, Type: Number}
  ServerGroupId:
    Description: Server Group ID for the Server
    Type: String
  ROLoadBalancerId:
    Description: Read Only Load Balancer ID
    Type: String
  BaseURL:
    Default: 'https://raw.githubusercontent.com/EMSL-MSC/heat-templates/master/cfn'
    Description: Base URL where other templates live.
    Type: String
Resources:
  Instance:
    Properties:
      Parameters:
        Name: {Ref: Name}
        IpAddress: {Ref: IpAddress}
        VolumeId: {Ref: VolumeId}
        PrimarySecurityGroup: {Ref: PrimarySecurityGroup}
        InstanceType: {Ref: InstanceType}
        InstanceZone: {Ref: InstanceZone}
        KeyName: {Ref: KeyName}
        Image: {Ref: Image}
        PrimaryNetworkId: {PrimaryNetworkId}
        StartupTimeout: {StartupTimeout}
        ServerGroupId: {ServerGroupId}
        ExtraUserData:
          Fn::Base64:
            Fn::Join:
            - ''
            - - "/srv/389/master-setup.sh\n"
              - "fail_msg=\\`/srv/389/sync-wait.sh\\` || error_exit \"\\$fail_msg\"\n"
              - "## Extra userdata\n"
              - {Ref: ExtraUserData}
              - "\n"
      TemplateURL:
          Fn::Join:
          - ''
          - - {Ref: BaseURL}
            - "/389/389_Server_init.yaml"
    Type: AWS::CloudFormation::Stack
  PoolMember:
    DependsOn: WaitConditionServer
    Properties:
        address:
          Fn::GetAtt: [Instance, Name]
        pool_id: {Ref: ROLoadBalancerId}
        protocol_port: 389
    Type: OS::Neutron::PoolMember
